/**
 * Pretty-printing Type Patterns
 *
 * @author Martin Bravenboer <martin.bravenboer@gmail.com>
 */
module aspectj/pp/pattern/Type
imports
	aspectj/signature
	libstratego-gpp
/**
 * Note: Void and ArrayType are already printed by the plain Java pp.
 */
rules

  aspectj-to-box :
    RefTypePattern(b) -> b

  aspectj-to-box :
    PrimTypePattern(b) -> b

  aspectj-to-box :
    Subtype(b) -> H hs=0 [ b "+" ]

/**
 * Parameterized tests
 */
rules

  aspectj-to-box :
    GenericTypePattern(b1, b2) -> H hs=0 [b1 b2]

  aspectj-to-box :
    GenericSubtypePattern(b1, b2) -> H hs=0 [b1 b2 "+"]

/**
 * Annotations in type patterns.
 */
rules

  // arik: I removed the ( and ) wrappers
  aspectj-to-box :
    AnnoTypePattern(AnnoPattern(annos), b2) -> H hs=0 [ H hs=1 [~*annos b2] ]

//  aspectj-to-box :
//    TopTypePattern(AnnoPattern(annos), b2) -> H hs=0 [ H hs=1 [~*annos b2] ]
      
