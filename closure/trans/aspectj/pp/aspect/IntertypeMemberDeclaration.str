/**
 * Intertype member declarations
 *
 * @author Martin Bravenboer <martin.bravenboer@gmail.com>
 */
module aspectj/pp/aspect/IntertypeMemberDeclaration

rules

  aspectj-to-box :
    IntertypeMethodDec(b1, b2@Block(_)) -> V vs=0 [b1 b2]

  aspectj-to-box :
    IntertypeMethodDec(b, NoMethodBody()) -> H hs=0 [b ";"]

  aspectj-to-box:
    IntertypeMethodDecHead(mods, opt-typeparams1, type, typename, opt-typeparams2, Id(n), params, opt-throws)
      ->
    H hs=1 [~*before ~type H hs=0 [~typename ~*tparams2 "." ~lit:n ~args] ~*throws ]
    where
        <list-to-args> params => args
      ; <type-params-to-boxes> opt-typeparams1 => tparams1
      ; <type-params-to-boxes> opt-typeparams2 => tparams2     
      ; <option-to-boxes> opt-throws => throws
      ; <conc> (mods, tparams1) => before

rules

  aspectj-to-box :
    IntertypeConstrDec(b1, b2) -> V vs=0 [b1 b2]
    	
  aspectj-to-box :
    IntertypeConstrDecHead(mods, opt-typeparams1, typename, opt-typeparams2, params, opt-throws)
      ->
    H hs=1 [~*before H hs=0 [~typename ~*tparams2 "." KW["new"] ~args] ~*throws ]
    where
        <list-to-args> params => args
      ; <type-params-to-boxes> opt-typeparams1 => tparams1
      ; <type-params-to-boxes> opt-typeparams2 => tparams2     
      ; <option-to-boxes> opt-throws => throws
      ; <conc> (mods, tparams1) => before      
  
rules
	
  aspectj-to-box :
    IntertypeFieldDec(mods, type, typename, opt-type-params, vardec)
      ->
    H hs=1 [ ~*mods ~type H hs=0 [~typename ~*ggg "." ~vardec ";"] ]
    where
      <option-to-boxes> opt-type-params => ggg
