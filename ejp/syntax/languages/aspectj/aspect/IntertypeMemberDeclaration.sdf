%%%
 %% Intertype Member Declarations
 %%
 %% @author  Martin Bravenboer <martin.bravenboer@gmail.com>
 %%%
module languages/aspectj/aspect/IntertypeMemberDeclaration[Ctx]
exports
  sorts IntertypeMemberDec

  %%%
   %% Intertype method declaration
   %%%
  context-free syntax
    IntertypeMethodDecHead MethodBody -> IntertypeMemberDec {cons("IntertypeMethodDec")}

    (Anno | MethodMod)* TypeParams? ResultType
      TypeName TypeParams? "." Id "(" {FormalParam ","}* ")" Throws?
      -> IntertypeMethodDecHead {cons("IntertypeMethodDecHead")}

  %%%
   %% Intertype constructor declaration
   %%%
  context-free syntax
    IntertypeConstrDecHead ConstrBody -> IntertypeMemberDec {cons("IntertypeConstrDec")}

    (Anno | ConstrMod)* TypeParams?
      TypeName TypeParams? "."
      "new" "(" {FormalParam ","}* ")" Throws?
      -> IntertypeConstrDecHead {cons("IntertypeConstrDecHead")}

  %%%
   %% Intertype field declaration
   %%
   %% @todo This will allow dimensions after the identifier, which is not
   %%        supported by AspectJ.
   %%%
  context-free syntax
    (Anno | FieldMod)* Type TypeName TypeParams? "." VarDec ";"
      -> IntertypeMemberDec {cons("IntertypeFieldDec")}
